// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: Copyright 2025 Carabiner Systems, Inc

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: v1.6.7.proto

package v1_6_7

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Record struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion    string                 `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	Id               string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Modified         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	Published        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=published,proto3" json:"published,omitempty"`
	Withdrawn        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=withdrawn,proto3" json:"withdrawn,omitempty"`
	Aliases          []string               `protobuf:"bytes,6,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Related          []string               `protobuf:"bytes,7,rep,name=related,proto3" json:"related,omitempty"`
	Summary          string                 `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty"`
	Details          string                 `protobuf:"bytes,9,opt,name=details,proto3" json:"details,omitempty"`
	Severity         []*Severity            `protobuf:"bytes,10,rep,name=severity,proto3" json:"severity,omitempty"`
	Affected         []*Affected            `protobuf:"bytes,11,rep,name=affected,proto3" json:"affected,omitempty"`
	References       []*Reference           `protobuf:"bytes,12,rep,name=references,proto3" json:"references,omitempty"`
	Credits          []*Credit              `protobuf:"bytes,13,rep,name=credits,proto3" json:"credits,omitempty"`
	DatabaseSpecific *structpb.Struct       `protobuf:"bytes,14,opt,name=database_specific,json=databaseSpecific,proto3" json:"database_specific,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_v1_6_7_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *Record) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Record) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Record) GetPublished() *timestamppb.Timestamp {
	if x != nil {
		return x.Published
	}
	return nil
}

func (x *Record) GetWithdrawn() *timestamppb.Timestamp {
	if x != nil {
		return x.Withdrawn
	}
	return nil
}

func (x *Record) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Record) GetRelated() []string {
	if x != nil {
		return x.Related
	}
	return nil
}

func (x *Record) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Record) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Record) GetSeverity() []*Severity {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *Record) GetAffected() []*Affected {
	if x != nil {
		return x.Affected
	}
	return nil
}

func (x *Record) GetReferences() []*Reference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *Record) GetCredits() []*Credit {
	if x != nil {
		return x.Credits
	}
	return nil
}

func (x *Record) GetDatabaseSpecific() *structpb.Struct {
	if x != nil {
		return x.DatabaseSpecific
	}
	return nil
}

type Reference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reference) Reset() {
	*x = Reference{}
	mi := &file_v1_6_7_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{1}
}

func (x *Reference) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Reference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CWE struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc          string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CWE) Reset() {
	*x = CWE{}
	mi := &file_v1_6_7_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CWE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWE) ProtoMessage() {}

func (x *CWE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWE.ProtoReflect.Descriptor instead.
func (*CWE) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{2}
}

func (x *CWE) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CWE) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Award struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        string                 `protobuf:"bytes,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=Currency,proto3" json:"Currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Award) Reset() {
	*x = Award{}
	mi := &file_v1_6_7_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Award) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Award) ProtoMessage() {}

func (x *Award) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Award.ProtoReflect.Descriptor instead.
func (*Award) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{3}
}

func (x *Award) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Award) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type Package struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ecosystem     string                 `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Purl          string                 `protobuf:"bytes,3,opt,name=purl,proto3" json:"purl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_v1_6_7_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{4}
}

func (x *Package) GetEcosystem() string {
	if x != nil {
		return x.Ecosystem
	}
	return ""
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

type Severity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Score         string                 `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Severity) Reset() {
	*x = Severity{}
	mi := &file_v1_6_7_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Severity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Severity) ProtoMessage() {}

func (x *Severity) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Severity.ProtoReflect.Descriptor instead.
func (*Severity) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{5}
}

func (x *Severity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Severity) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type Affected struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Package           *Package               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Severity          []*Severity            `protobuf:"bytes,2,rep,name=severity,proto3" json:"severity,omitempty"`
	Ranges            []*Range               `protobuf:"bytes,3,rep,name=ranges,proto3" json:"ranges,omitempty"`
	Versions          []string               `protobuf:"bytes,4,rep,name=versions,proto3" json:"versions,omitempty"`
	EcosystemSpecific *structpb.Struct       `protobuf:"bytes,5,opt,name=ecosystem_specific,json=ecosystemSpecific,proto3" json:"ecosystem_specific,omitempty"`
	DatabaseSpecific  *structpb.Struct       `protobuf:"bytes,6,opt,name=database_specific,json=databaseSpecific,proto3" json:"database_specific,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Affected) Reset() {
	*x = Affected{}
	mi := &file_v1_6_7_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Affected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affected) ProtoMessage() {}

func (x *Affected) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affected.ProtoReflect.Descriptor instead.
func (*Affected) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{6}
}

func (x *Affected) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *Affected) GetSeverity() []*Severity {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *Affected) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *Affected) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *Affected) GetEcosystemSpecific() *structpb.Struct {
	if x != nil {
		return x.EcosystemSpecific
	}
	return nil
}

func (x *Affected) GetDatabaseSpecific() *structpb.Struct {
	if x != nil {
		return x.DatabaseSpecific
	}
	return nil
}

type Credit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credit) Reset() {
	*x = Credit{}
	mi := &file_v1_6_7_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credit) ProtoMessage() {}

func (x *Credit) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credit.ProtoReflect.Descriptor instead.
func (*Credit) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{7}
}

func (x *Credit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Credit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Range struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Repo             string                 `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Events           []*Range_Event         `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	DatabaseSpecific *structpb.Struct       `protobuf:"bytes,4,opt,name=database_specific,json=databaseSpecific,proto3" json:"database_specific,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_v1_6_7_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{8}
}

func (x *Range) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Range) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Range) GetEvents() []*Range_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Range) GetDatabaseSpecific() *structpb.Struct {
	if x != nil {
		return x.DatabaseSpecific
	}
	return nil
}

type Range_Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Introduced    string                 `protobuf:"bytes,1,opt,name=introduced,proto3" json:"introduced,omitempty"`
	Fixed         string                 `protobuf:"bytes,2,opt,name=fixed,proto3" json:"fixed,omitempty"`
	LastAffected  string                 `protobuf:"bytes,3,opt,name=last_affected,json=lastAffected,proto3" json:"last_affected,omitempty"`
	Limit         string                 `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Range_Event) Reset() {
	*x = Range_Event{}
	mi := &file_v1_6_7_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range_Event) ProtoMessage() {}

func (x *Range_Event) ProtoReflect() protoreflect.Message {
	mi := &file_v1_6_7_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range_Event.ProtoReflect.Descriptor instead.
func (*Range_Event) Descriptor() ([]byte, []int) {
	return file_v1_6_7_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Range_Event) GetIntroduced() string {
	if x != nil {
		return x.Introduced
	}
	return ""
}

func (x *Range_Event) GetFixed() string {
	if x != nil {
		return x.Fixed
	}
	return ""
}

func (x *Range_Event) GetLastAffected() string {
	if x != nil {
		return x.LastAffected
	}
	return ""
}

func (x *Range_Event) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

var File_v1_6_7_proto protoreflect.FileDescriptor

var file_v1_6_7_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x31, 0x2e, 0x36, 0x2e, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x04, 0x0a, 0x06, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x30, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37,
	0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31,
	0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x73,
	0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x22, 0x31,
	0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x29, 0x0a, 0x03, 0x43, 0x57, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x3b, 0x0a, 0x05,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x4f, 0x0a, 0x07, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x75, 0x72, 0x6c, 0x22, 0x34, 0x0a, 0x08, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0xc0, 0x02, 0x0a, 0x08, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x29,
	0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11, 0x65, 0x63, 0x6f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x12, 0x44, 0x0a,
	0x11, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x22, 0x30, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31,
	0x5f, 0x36, 0x5f, 0x37, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x1a, 0x78,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x88, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x73, 0x76, 0x2e, 0x76, 0x31, 0x5f, 0x36, 0x5f, 0x37, 0x42, 0x09, 0x56, 0x31, 0x36,
	0x37, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x72, 0x2d, 0x64,
	0x65, 0x76, 0x2f, 0x6f, 0x73, 0x76, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x73, 0x76, 0x2f, 0x76, 0x31,
	0x5f, 0x36, 0x5f, 0x37, 0xa2, 0x02, 0x03, 0x4f, 0x56, 0x58, 0xaa, 0x02, 0x08, 0x4f, 0x73, 0x76,
	0x2e, 0x56, 0x31, 0x36, 0x37, 0xca, 0x02, 0x08, 0x4f, 0x73, 0x76, 0x5c, 0x56, 0x31, 0x36, 0x37,
	0xe2, 0x02, 0x14, 0x4f, 0x73, 0x76, 0x5c, 0x56, 0x31, 0x36, 0x37, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x4f, 0x73, 0x76, 0x3a, 0x3a, 0x56,
	0x31, 0x36, 0x37, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_6_7_proto_rawDescOnce sync.Once
	file_v1_6_7_proto_rawDescData = file_v1_6_7_proto_rawDesc
)

func file_v1_6_7_proto_rawDescGZIP() []byte {
	file_v1_6_7_proto_rawDescOnce.Do(func() {
		file_v1_6_7_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_6_7_proto_rawDescData)
	})
	return file_v1_6_7_proto_rawDescData
}

var file_v1_6_7_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_6_7_proto_goTypes = []any{
	(*Record)(nil),                // 0: osv.v1_6_7.Record
	(*Reference)(nil),             // 1: osv.v1_6_7.Reference
	(*CWE)(nil),                   // 2: osv.v1_6_7.CWE
	(*Award)(nil),                 // 3: osv.v1_6_7.Award
	(*Package)(nil),               // 4: osv.v1_6_7.Package
	(*Severity)(nil),              // 5: osv.v1_6_7.Severity
	(*Affected)(nil),              // 6: osv.v1_6_7.Affected
	(*Credit)(nil),                // 7: osv.v1_6_7.Credit
	(*Range)(nil),                 // 8: osv.v1_6_7.Range
	(*Range_Event)(nil),           // 9: osv.v1_6_7.Range.Event
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 11: google.protobuf.Struct
}
var file_v1_6_7_proto_depIdxs = []int32{
	10, // 0: osv.v1_6_7.Record.modified:type_name -> google.protobuf.Timestamp
	10, // 1: osv.v1_6_7.Record.published:type_name -> google.protobuf.Timestamp
	10, // 2: osv.v1_6_7.Record.withdrawn:type_name -> google.protobuf.Timestamp
	5,  // 3: osv.v1_6_7.Record.severity:type_name -> osv.v1_6_7.Severity
	6,  // 4: osv.v1_6_7.Record.affected:type_name -> osv.v1_6_7.Affected
	1,  // 5: osv.v1_6_7.Record.references:type_name -> osv.v1_6_7.Reference
	7,  // 6: osv.v1_6_7.Record.credits:type_name -> osv.v1_6_7.Credit
	11, // 7: osv.v1_6_7.Record.database_specific:type_name -> google.protobuf.Struct
	4,  // 8: osv.v1_6_7.Affected.package:type_name -> osv.v1_6_7.Package
	5,  // 9: osv.v1_6_7.Affected.severity:type_name -> osv.v1_6_7.Severity
	8,  // 10: osv.v1_6_7.Affected.ranges:type_name -> osv.v1_6_7.Range
	11, // 11: osv.v1_6_7.Affected.ecosystem_specific:type_name -> google.protobuf.Struct
	11, // 12: osv.v1_6_7.Affected.database_specific:type_name -> google.protobuf.Struct
	9,  // 13: osv.v1_6_7.Range.events:type_name -> osv.v1_6_7.Range.Event
	11, // 14: osv.v1_6_7.Range.database_specific:type_name -> google.protobuf.Struct
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_v1_6_7_proto_init() }
func file_v1_6_7_proto_init() {
	if File_v1_6_7_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_6_7_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_6_7_proto_goTypes,
		DependencyIndexes: file_v1_6_7_proto_depIdxs,
		MessageInfos:      file_v1_6_7_proto_msgTypes,
	}.Build()
	File_v1_6_7_proto = out.File
	file_v1_6_7_proto_rawDesc = nil
	file_v1_6_7_proto_goTypes = nil
	file_v1_6_7_proto_depIdxs = nil
}
